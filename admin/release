#~/bin/bash

## Build and deploy framework release

UPSTREAM=https://github.com/bcit-ci/CodeIgniter4.git
action=test
version=4
qualifier=

branch=release-
devonly='.github/* admin/* build/* contributing/* user_guide_src/* CODE_OF_CONDUCT.md \
DCO.txt PULL_REQUEST_TEMPLATE.md'
which=release

BOLD='\033[1m'
NORMAL='\033[0m'
COLOR='\033[1;31m'
ERROR='\033[0;31m'

echo -e "${BOLD}${COLOR}CodeIgniter4 release builder${NORMAL}"
echo '----------------------------'

#---------------------------------------------------
# Check arguments
echo -e "${BOLD}Checking arguments...${NORMAL}"

if [ $# -lt 1 ]; then
    echo "You really need to read the directions first!"
    exit 1
fi

if [ $1 = 'deploy' ]; then
    action=deploy
elif [ $1 != 'test' ]; then
    echo -e "${ERROR}Invalid action ($1)${NORMAL}"
    exit 1
fi
shift   # drop the command from the argument list

version=$1
if [ $# -gt 1 ]; then
    qualifier="-${2}"
    which='pre-release'
fi
branch="release-$version$qualifier"

#---------------------------------------------------
# Create the release branch
echo -e "${BOLD}Creating $which $branch to $action ${NORMAL}"

git checkout develop
git branch -d $branch     # remove the branch if there
git checkout -b $branch

#---------------------------------------------------
# Update version dependencies
echo -e "${BOLD}Updating version dependencies${NORMAL}"

# CI_VERSION definition in system/CodeIgniter.php
sed -i "/const CI_VERSION/s/'.*'/'${version}${qualifier}'/" system/CodeIgniter.php

# release substitution variable in user_guide_src/source/conf.py
sed -i "/release =/s/'.*'/'${version}${qualifier}'/" user_guide_src/source/conf.py

# version & date in user_guide_src/source/changelog.rst
sed -i "/|release|/s/|.*|/${version}${qualifier}/" user_guide_src/source/changelog.rst
sed -i "/Release Date/s/Not Released/$(date +'%B %d, %Y')/" user_guide_src/source/changelog.rst

#---------------------------------------------------
# Generate the user guide
echo -e "${BOLD}Generate the user guide${NORMAL}"
cd user_guide_src

# make the UG & embed it in the project root
make html
rm -Rf ../UserGuide
mv build/html ../UserGuide

# make the epub & stick it in the project's "build" folder for now
make epub
mv build/epub/CodeIgniter4.epub "../build/CodeIgniter-UserGuide-${version}${qualifier}.epub"

cd ..

#---------------------------------------------------
# Hide stuff from the release bundle
echo -e "${BOLD}Hide stuff from the release bundle${NORMAL}"

# Restore the old .gitignore 
if [ -f admin/previous-gitignore ]; then
    cp -r admin/previous-gitignore .gitignore
fi
cp -r .gitignore admin/previous-gitignore

# Add the dev only folders/files to .gitignore
for f in $devonly; do
    echo $f >> .gitignore
done

#---------------------------------------------------
# And finally, the release tag
echo -e "${BOLD}Tag this branch for release${NORMAL}"
git tag -a v${version}${qualifier} -m "Release ${version}${qualifier} build"

#---------------------------------------------------
# Are we there yet?
if [ $action = 'test' ]; then
    echo -e "${BOLD}Your $branch branch is ready to inspect.${NORMAL}"
    exit 0
fi
echo -e "${BOLD}Are we there yet (yes|no)?${NORMAL}"
read answer
if [ $answer != 'yes' ]; then
    echo -e "${BOLD}Your $branch branch is ready to inspect.${NORMAL}"
    echo "Rerun this script when ready to deploy"
fi

#---------------------------------------------------
# Merge away
echo -e "${BOLD}Merge the release into master${NORMAL}"
git checkout master
git merge $branch
git push UPSTREAM master

#---------------------------------------------------
# Put our house back in order
echo -e "${BOLD}Put our house back in order${NORMAL}"

mv -r admin/previous-gitignore .gitignore
rm -Rf UserGuide
rm -f build/*.epub

#---------------------------------------------------
# Add next version block in changelog.rst
echo -e "${BOLD}Setup next release${NORMAL}"
sed -i '5 i\
Version |release|
====================================================

Release Date: Not Released
' user_guide_src/source/changelog.rst

#---------------------------------------------------
# Merge away
echo -e "${BOLD}Setup the develop branch${NORMAL}"
git add .
git commit -S -m "Post ${branch} cleanup"
git push origin master
git push UPSTREAM master

git checkout develop
git merge master
git push origin develop
git push UPSTREAM develop

git branch -d $branch

#---------------------------------------------------
# Phew!

echo -e "${BOLD}Congratulations - we have liftoff${NORMAL}"
echo "Don't forget to announce this release on the forum and on twitter!"
