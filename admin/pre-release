#!/bin/bash

## Build framework release branch & distributables

#---------------------------------------------------
# Setup variables

. admin/config

#---------------------------------------------------
# Sanity check - are we underway already?
if [ -n "$RELEASE" ]; then
    echo -e "${BOLD}${ERROR}A release build is already underway${NORMAL}"
    exit 1
fi

action=test
version=4
qualifier=

branch=release-
releasable='application docs public system writable README.md composer.json contributing.md env license.txt spark'
which=release

echo -e "${BOLD}${COLOR}CodeIgniter4 release builder${NORMAL}"
echo '----------------------------'

#---------------------------------------------------
# Check arguments
echo -e "${BOLD}Checking arguments...${NORMAL}"

if [ $# -lt 1 ]; then
    echo -e "${BOLD}Usage: admin/pre-release version# pre-release-qualifier${NORMAL}"
    exit 1
fi


version=$1
if [ $# -gt 1 ]; then
    qualifier="-${2}"
    which='pre-release'
fi
RELEASE=$version$qualifier
branch="release-$RELEASE"

#---------------------------------------------------
# Create the release branch
echo -e "${BOLD}Creating $which $branch to $action ${NORMAL}"

git checkout develop
git branch -d $branch &>/dev/null    # remove the branch if there
git checkout -b $branch
composer update

#---------------------------------------------------
# Update version dependencies
echo -e "${BOLD}Updating version dependencies${NORMAL}"

function check_unique {
    count=`grep -c '$1' < $2 | wc -l`
    if [ $count -ne 1 ]; then
        echo -e "${BOLD}${COLOR}$2 has ${count} occurrences of '$1'${NORMAL}"
        exit 1
    fi
}

# Make sure there is only one line to affect in each file
check_unique "const CI_VERSION" 'system/CodeIgniter.php'
check_unique "release =" 'user_guide_src/source/conf.py'
check_unique "|release|" 'user_guide_src/source/changelogs/index.rst'
check_unique "Release Date.*Not Released" 'user_guide_src/source/changelogs/index.rst'

# CI_VERSION definition in system/CodeIgniter.php
sed -i "/const CI_VERSION/s/'.*'/'${RELEASE}'/" system/CodeIgniter.php

# release substitution variable in user_guide_src/source/conf.py
sed -i "/release =/s/'.*'/'${RELEASE}'/" user_guide_src/source/conf.py

# version & date in user_guide_src/source/changelog.rst
sed -i "/|release|/s/|.*|/${RELEASE}/" user_guide_src/source/changelogs/index.rst
sed -i "/Release Date/s/Not Released/$(date +'%B %d, %Y')/" user_guide_src/source/changelogs/index.rst

# establish version-specific changelog
mv user_guide_src/source/changelogs/next.rst user_guide_src/source/changelogs/${RELEASE}.rst
# start new changelog for next version

#---------------------------------------------------
# Setup the distribution folders
echo -e "${BOLD}Building repo distributions${NORMAL}"

function setup_repo {
    mkdir dist/$1
    cd dist/$1
    git init
    git remote add origin ${CI_ORG}/$1
    git fetch
}

if [ -d dist ]; then
    rm -rf dist/
fi
mkdir dist

setup_repo framework
setup_repo docs
setup_repo app-starter

#---------------------------------------------------
# Generate the user guide
echo -e "${BOLD}Generate the user guide${NORMAL}"

cd user_guide_src

# make the UG 
rm -rf build/*
make html
make epub

cd ..

cp -rf user_guide_src/build/html dist/docs
mv user_guide_src/built/html dist/framework/docs

cd dist/docs
git checkout gh-pages
cp -r ../../docs .

#---------------------------------------------------
# And finally, get ready for merging
git add .
git commit -m "Release ${RELEASE}"

#---------------------------------------------------
# Hide stuff from the release bundle
echo -e "${BOLD}Build the distributables${NORMAL}"

# add the docs
mv user_guide_src/build/epub/CodeIgniter4.epub dist/CodeIgniter-${BRANCH}.epub

cd build
zip -r  ../dist/v${RELEASE}.zip *
tar -zcf  ../dist/v${RELEASE}.tar.gz *

#---------------------------------------------------
# Save the in-progress branch designation for following steps
sed -i "/RELEASE=/s/=.*/=${RELEASE}/" admin/config

#---------------------------------------------------
# Done for now
echo -e "${BOLD}Your $branch branch is ready to inspect.${NORMAL}"
echo -e "${BOLD}Follow the directions in workflow.md to continue.${NORMAL}"
